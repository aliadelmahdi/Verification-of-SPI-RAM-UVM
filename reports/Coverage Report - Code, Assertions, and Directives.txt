Coverage Report by instance with details

=================================================================================
=== Instance: /\tb_top#slave /SPI_slave_inst
=== Design Unit: work.SPI_slave_sva
=================================================================================

Assertion Coverage:
    Assertions                      18        14         4    77.77%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/\tb_top#slave /SPI_slave_inst/assert_reset
                     design/SPI_Assertions/SPI_slave_sva.sv(32)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_idle_to_chk_cmd
                     design/SPI_Assertions/SPI_slave_sva.sv(45)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_idle_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(54)
                                                        0          0
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(63)
                                                        0          0
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd_to_write
                     design/SPI_Assertions/SPI_slave_sva.sv(72)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd_to_read_data
                     design/SPI_Assertions/SPI_slave_sva.sv(81)
                                                        0          0
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd_to_read_add
                     design/SPI_Assertions/SPI_slave_sva.sv(90)
                                                        0          0
/\tb_top#slave /SPI_slave_inst/assert_read_add_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(99)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_read_add_to_read_add
                     design/SPI_Assertions/SPI_slave_sva.sv(108)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_read_data_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(117)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_read_data_to_read_data
                     design/SPI_Assertions/SPI_slave_sva.sv(126)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_write_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(135)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_write_to_write
                     design/SPI_Assertions/SPI_slave_sva.sv(144)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(159)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd
                     design/SPI_Assertions/SPI_slave_sva.sv(171)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_serial_to_parallel
                     design/SPI_Assertions/SPI_slave_sva.sv(199)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_rx_valid
                     design/SPI_Assertions/SPI_slave_sva.sv(211)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_miso
                     design/SPI_Assertions/SPI_slave_sva.sv(230)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         7         7         0   100.00%

================================Branch Details================================

Branch Coverage for instance /\tb_top#slave /SPI_slave_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/SPI_Assertions/SPI_slave_sva.sv
------------------------------------IF Branch------------------------------------
    183                                    86129     Count coming in to IF
    183             1                          4                 if (!rst_n) begin
    186             1                      74125                 end else if (cs inside {WRITE, READ_ADD, READ_DATA}) begin
                                           12000     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    187                                    74125     Count coming in to IF
    187             1                      60000                     if (rx_counter < MEM_WIDTH+2)
                                           14125     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    189                                    74125     Count coming in to IF
    189             1                       8125                     if (rx_valid && rx_counter == MEM_WIDTH+2)
                                           66000     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       3         2         1    66.66%

================================Condition Details================================

Condition Coverage for instance /\tb_top#slave /SPI_slave_inst --

  File design/SPI_Assertions/SPI_slave_sva.sv
----------------Focused Condition View-------------------
Line       187 Item    1  (rx_counter < (8 + 2))
Condition totals: 1 of 1 input term covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (rx_counter < (8 + 2))         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  (rx_counter < (8 + 2))_0  -                             
  Row   2:          1  (rx_counter < (8 + 2))_1  -                             

----------------Focused Condition View-------------------
Line       189 Item    1  (rx_valid && (rx_counter == (8 + 2)))
Condition totals: 1 of 2 input terms covered = 50.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
                 rx_valid         Y
  (rx_counter == (8 + 2))         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  rx_valid_0                 -                             
  Row   2:          1  rx_valid_1                 (rx_counter == (8 + 2))       
  Row   3:    ***0***  (rx_counter == (8 + 2))_0  rx_valid                      
  Row   4:          1  (rx_counter == (8 + 2))_1  rx_valid                      


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       5         5         0   100.00%

================================Statement Details================================

Statement Coverage for instance /\tb_top#slave /SPI_slave_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/SPI_Assertions/SPI_slave_sva.sv
    12                                               module SPI_slave_sva(cs,MOSI,SS_n,clk,rst_n,tx_data,tx_valid,MISO,rx_data,rx_valid,rx_counter);
    13                                                   
    14                                                   input MOSI,clk,rst_n,SS_n,tx_valid;
    15                                                   input [MEM_WIDTH-1:0] tx_data;
    16                                               
    17                                               	input logic MISO,rx_valid;
    18                                               	input logic [MEM_WIDTH+1:0] rx_data;
    19                                                   input logic [2:0] cs;
    20                                                   input logic [3:0] rx_counter;
    21                                                   //** 1: Reset Verification **\\
    22                                               
    23                                                   // 1.1 & 1.2: Reset Current State
    24                                                   property check_reset;
    25                                                           (!rst_n)|=> (  cs == IDLE
    26                                                                       // && !MISO
    27                                                                       // && !rx_valid
    28                                                                       // && rx_data ==0
    29                                                                       );
    30                                                                     
    31                                                   endproperty
    32                                                   assert_reset: assert property (@(posedge clk) check_reset)
    33                                                       else $error("Failed to assert reset, the current state at reset is not IDLE");
    34                                               
    35                                                   //** 3: FSM transitions **\\
    36                                               
    37                                                   //aserted => slave not selected
    38                                               
    39                                                   // 3.1: Transition from IDLE to CHK_CMD
    40                                                   property check_idle_to_chk_cmd;
    41                                                       @(posedge clk) disable iff(!rst_n)
    42                                                               (cs==IDLE && SS_n==SLAVE_SELECTED) |=> (cs == CHK_CMD);
    43                                                   endproperty
    44                                               
    45                                                   assert_idle_to_chk_cmd: assert property (check_idle_to_chk_cmd)
    46                                                       else $error("Failed to move to CHK_CMD state when slave is selected at IDLE state");
    47                                               
    48                                                   // 3.1.1: Transition from IDLE to IDLE
    49                                                   property check_idle_to_idle;
    50                                                       @(posedge clk) disable iff(!rst_n)
    51                                                               (cs==IDLE && SS_n==SLAVE_NOT_SELECTED) |=> (cs == IDLE);
    52                                                   endproperty
    53                                               
    54                                                   assert_idle_to_idle: assert property (check_idle_to_idle)
    55                                                       else $error("Failed to stay at IDLE state when the slave isn't selected");
    56                                               
    57                                                   // 3.2: Transition from CHK_CMD to IDLE
    58                                                   property check_chk_cmd_to_idle;
    59                                                       @(posedge clk) disable iff(!rst_n)
    60                                                               (cs==CHK_CMD && SS_n==SLAVE_NOT_SELECTED) |=> (cs == IDLE);
    61                                                   endproperty
    62                                               
    63                                                   assert_chk_cmd_to_idle: assert property (check_chk_cmd_to_idle)
    64                                                       else $error("Failed to move to IDLE state when slave isn't selected at CHK_CMD state");
    65                                               
    66                                                   // 3.2.1: Transition from CHK_CMD to WRITE
    67                                                   property check_chk_cmd_to_write;
    68                                                       @(posedge clk) disable iff(!rst_n)
    69                                                               (cs==CHK_CMD && SS_n==SLAVE_SELECTED && !MOSI) |=> (cs == WRITE);
    70                                                   endproperty
    71                                               
    72                                                   assert_chk_cmd_to_write: assert property (check_chk_cmd_to_write)
    73                                                       else $error("Failed to move to WRITE state when slave is selected and MOSI is deasserted at CHK_CMD state");
    74                                               
    75                                                   // 3.2.2: Transition from CHK_CMD to READ_DATA
    76                                                   property check_chk_cmd_to_read_data;
    77                                                       @(posedge clk) disable iff(!rst_n)
    78                                                               (cs==CHK_CMD && SS_n==SLAVE_NOT_SELECTED) |=> (cs == READ_DATA);
    79                                                   endproperty
    80                                               
    81                                                   assert_chk_cmd_to_read_data: assert property (check_chk_cmd_to_read_data)
    82                                                       else $error("Failed to move to READ_DATA state when slave is not selected at CHK_CMD state");
    83                                               
    84                                                   // 3.2.3: Transition from CHK_CMD to READ_ADD
    85                                                   property check_chk_cmd_to_read_add;
    86                                                       @(posedge clk) disable iff(!rst_n)
    87                                                               (cs==CHK_CMD && SS_n==SLAVE_NOT_SELECTED) |=> (cs == READ_ADD);
    88                                                   endproperty
    89                                               
    90                                                   assert_chk_cmd_to_read_add: assert property (check_chk_cmd_to_read_add)
    91                                                       else $error("Failed to move to READ_ADD state when slave is not selected at CHK_CMD state");
    92                                               
    93                                                   // 3.3: Transition from READ_ADD to IDLE
    94                                                   property check_read_add_to_idle;
    95                                                       @(posedge clk) disable iff(!rst_n)
    96                                                               (cs==READ_ADD && SS_n==SLAVE_NOT_SELECTED) |=> (cs == IDLE);
    97                                                   endproperty
    98                                               
    99                                                   assert_read_add_to_idle: assert property (check_read_add_to_idle)
    100                                                      else $error("Failed to move to IDLE state when slave isn't selected at READ_ADD state");
    101                                              
    102                                                  // 3.3.1: Transition from READ_ADD to READ_ADD
    103                                                  property check_read_add_to_read_add;
    104                                                      @(posedge clk) disable iff(!rst_n)
    105                                                              (cs==READ_ADD && SS_n==SLAVE_SELECTED) |=> (cs == READ_ADD);
    106                                                  endproperty
    107                                              
    108                                                  assert_read_add_to_read_add: assert property (check_read_add_to_read_add)
    109                                                      else $error("Failed to stay at READ_ADD state when slave is selected at READ_ADD state");
    110                                              
    111                                                   // 3.4: Transition from READ_DATA to IDLE
    112                                                  property check_read_data_to_idle;
    113                                                      @(posedge clk) disable iff(!rst_n)
    114                                                              (cs==READ_DATA && SS_n==SLAVE_NOT_SELECTED) |=> (cs == IDLE);
    115                                                  endproperty
    116                                              
    117                                                  assert_read_data_to_idle: assert property (check_read_data_to_idle)
    118                                                      else $error("Failed to move to IDLE state from READ_DATA state when the slave is not selected");
    119                                                     
    120                                                    // 3.4.1: Transition from READ_DATA to READ_DATA
    121                                                  property check_read_data_to_read_data;
    122                                                      @(posedge clk) disable iff(!rst_n)
    123                                                              (cs==READ_DATA && SS_n==SLAVE_SELECTED) |=> (cs == READ_DATA);
    124                                                  endproperty
    125                                              
    126                                                  assert_read_data_to_read_data: assert property (check_read_data_to_read_data)
    127                                                      else $error("Failed to stay at READ_DATA state when slave is selected at READ_DATA state");
    128                                              
    129                                                  // 3.5: Transition from WRITE to IDLE
    130                                                  property check_write_to_idle;
    131                                                      @(posedge clk) disable iff(!rst_n)
    132                                                              (cs==WRITE && SS_n==SLAVE_NOT_SELECTED) |=> (cs == IDLE);
    133                                                  endproperty
    134                                              
    135                                                  assert_write_to_idle: assert property (check_write_to_idle)
    136                                                      else $error("Failed to move to IDLE state from WRITE state when the slave is not selected");
    137                                              
    138                                                  // 3.5.1: Transition from WRITE to WRITE
    139                                                  property check_write_to_write;
    140                                                      @(posedge clk) disable iff(!rst_n)
    141                                                              (cs==WRITE && SS_n==SLAVE_SELECTED) |=> (cs == WRITE);
    142                                                  endproperty
    143                                              
    144                                                  assert_write_to_write: assert property (check_write_to_write)
    145                                                      else $error("Failed to stay at WRITE state when slave isn't selected at WRITE state");
    146                                              
    147                                                  //** 4: Signals at the FSM states **\\
    148                                              
    149                                                      //asserted => slave not selected
    150                                              
    151                                                      // 4.1: Signals at IDLE state
    152                                                      property check_idle;
    153                                                          @(posedge clk) disable iff(!rst_n)
    154                                                                  (cs==IDLE) |=> (rx_data == 0 &&
    155                                                                                  !rx_valid
    156                                                                                  );
    157                                                      endproperty
    158                                              
    159                                                      assert_idle: assert property (check_idle)
    160                                                          else $error("Mismatch in signals at IDLE state");
    161                                              
    162                                                      // 4.2: Signals at CHK_CMD state
    163                                                      property check_chk_cmd;
    164                                                          @(posedge clk) disable iff(!rst_n)
    165                                                                  (cs==CHK_CMD) |=> (!MISO &&
    166                                                                                     !rx_valid &&
    167                                                                                     rx_data == 0
    168                                                                                    );
    169                                                      endproperty
    170                                              
    171                                                      assert_chk_cmd: assert property (check_chk_cmd)
    172                                                          else $error("Mismatch in signals at CHK_CMD state");
    173                                              
    174                                                      //** 5: SPI Slave **\\
    175                                              
    176                                                      //aserted => slave not selected
    177                                              
    178                                                      // 5.1: Serial to Parallel
    179                                              
    180                                                      logic [MEM_WIDTH+1:0] mosi_shift, mosi_shift_latched;
    181                                              
    182             1                      86129             always @(posedge clk or negedge rst_n) begin
    183                                                          if (!rst_n) begin
    184             1                          4                     mosi_shift <= '0;
    185             1                          4                     mosi_shift_latched <= '0;
    186                                                          end else if (cs inside {WRITE, READ_ADD, READ_DATA}) begin
    187                                                              if (rx_counter < MEM_WIDTH+2)
    188             1                      60000                         mosi_shift <= {mosi_shift[MEM_WIDTH:0], MOSI}; // Shift left
    189                                                              if (rx_valid && rx_counter == MEM_WIDTH+2)
    190             1                       8125                         mosi_shift_latched <= mosi_shift;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        104       104         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#slave /SPI_slave_inst --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                           cs[2-0]           1           1                              100.00 
                                   mosi_shift[9-0]           1           1                              100.00 
                           mosi_shift_latched[9-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                   rx_counter[3-0]           1           1                              100.00 
                                      rx_data[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         52 
Toggled Node Count   =         52 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (104 of 104 bins)

=================================================================================
=== Instance: /\tb_top#slave 
=== Design Unit: work.SPI_slave
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        44        42         2    95.45%

================================Branch Details================================

Branch Coverage for instance /\tb_top#slave 

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/SPI_design/Designer RTL/SPI_slave.v
------------------------------------IF Branch------------------------------------
    30                                     24002     Count coming in to IF
    30              1                          2         if(~arst_n)begin
    32              1                      24000         end else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    37                                     66655     Count coming in to CASE
    38              1                      12000             IDLE :begin
    44              1                       8964             CHK_CMD : begin
    64              1                      19892             WRITE : begin
    73              1                      10318             READ_ADD : begin
    82              1                      15480             READ_DATA : begin
    90              1                          1             default:  NS = IDLE;
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                     12000     Count coming in to IF
    39              1                       6000                 if(SS_n)
    41              1                       6000                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    46                                      8964     Count coming in to IF
    46              1                       8964                 if(~SS_n) begin
    61              1                    ***0***                 else  
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                      8964     Count coming in to IF
    48              1                       6000                     if(~MOSI)
    51              1                       2964                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                      2964     Count coming in to IF
    53              1                       1482                         if(rd_addr_hold)
    56              1                       1482                         else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    66                                     19892     Count coming in to IF
    66              1                      16856                 if(~SS_n) begin
    70              1                       3036                 else  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                     10318     Count coming in to IF
    75              1                       8836                 if(~SS_n) begin
    79              1                       1482                 else  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    84                                     15480     Count coming in to IF
    84              1                      13998                 if(~SS_n) 
    87              1                       1482                 else  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    95                                     91340     Count coming in to IF
    95              1                          2         if(~arst_n)begin
                                           91338     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    103                                    91340     Count coming in to CASE
    104             1                       6001             IDLE :begin
    114             1                       6000             CHK_CMD:begin
    121             1                      33396             WRITE:begin
    131             1                      16302             READ_ADD:begin
    141             1                      29640             READ_DATA:begin
    164             1                          1             default:begin
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    109                                     6001     Count coming in to IF
    109             1                       1481                 if(tx_valid)
    111             1                       4520                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    122                                    33396     Count coming in to IF
    122             1                      30360                 if(rx_counter<10)begin
    126             1                       3036                 end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    132                                    16302     Count coming in to IF
    132             1                      14820                 if(rx_counter<10)begin
    135             1                       1482                 end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    142                                    29640     Count coming in to IF
    142             1                      14820                 if(rx_counter<10)begin
    145             1                      14820                 end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    148                                    14820     Count coming in to IF
    148             1                      11856                     if(tx_valid)begin
                                            2964     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    149                                    11856     Count coming in to IF
    149             1                      11856                         if(tx_counter<8)begin
    154             1                    ***0***                         end else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    152                                    11856     Count coming in to IF
    152             1                       1482                             if (tx_counter == 7)
                                           10374     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       5         4         1    80.00%

================================Condition Details================================

Condition Coverage for instance /\tb_top#slave  --

  File design/SPI_design/Designer RTL/SPI_slave.v
----------------Focused Condition View-------------------
Line       122 Item    1  (rx_counter < 10)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (rx_counter < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (rx_counter < 10)_0   -                             
  Row   2:          1  (rx_counter < 10)_1   -                             

----------------Focused Condition View-------------------
Line       132 Item    1  (rx_counter < 10)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (rx_counter < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (rx_counter < 10)_0   -                             
  Row   2:          1  (rx_counter < 10)_1   -                             

----------------Focused Condition View-------------------
Line       142 Item    1  (rx_counter < 10)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (rx_counter < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (rx_counter < 10)_0   -                             
  Row   2:          1  (rx_counter < 10)_1   -                             

----------------Focused Condition View-------------------
Line       149 Item    1  (tx_counter < 8)
Condition totals: 0 of 1 input term covered = 0.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (tx_counter < 8)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (tx_counter < 8)_0    -                             
  Row   2:          1  (tx_counter < 8)_1    -                             

----------------Focused Condition View-------------------
Line       152 Item    1  (tx_counter == 7)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (tx_counter == 7)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (tx_counter == 7)_0   -                             
  Row   2:          1  (tx_counter == 7)_1   -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         7         1    87.50%

================================FSM Details================================

FSM Coverage for instance /\tb_top#slave  --

FSM_ID: CS
    Current State Object : CS
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  38                IDLE                   0
  44             CHK_CMD                   1
  73            READ_ADD                   3
  82           READ_DATA                   4
  64               WRITE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                6002          
                 CHK_CMD                6000          
                READ_ADD                2964          
               READ_DATA                2964          
                   WRITE                6072          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  42                   0                6000          IDLE -> CHK_CMD               
  57                   2                1482          CHK_CMD -> READ_ADD           
  54                   3                1482          CHK_CMD -> READ_DATA          
  49                   4                3036          CHK_CMD -> WRITE              
  80                   5                1482          READ_ADD -> IDLE              
  88                   6                1482          READ_DATA -> IDLE             
  71                   7                3036          WRITE -> IDLE                 
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
  62                   1          CHK_CMD -> IDLE     


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         7         1    87.50%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      61        55         6    90.16%

================================Statement Details================================

Statement Coverage for instance /\tb_top#slave  --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/SPI_design/Designer RTL/SPI_slave.v
    1                                                module SPI_slave (
    2                                                  /*--------------Inputs--------------*/
    3                                                    input  MOSI,        /* the serial date sent from the master */
    4                                                    input  SS_n,        /* start and end communication from master side */
    5                                                    input  [7:0]tx_data,/* the data to write in the memory */
    6                                                    input  tx_valid,    /* the signal dedicate that tx_data is ready to covert from parallel to serial by slave*/
    7                                                    input  clk,         /*  clock signal input */
    8                                                    input  arst_n,      /*  active low synchronous reset */
    9                                                  /*--------------outputs-------------*/
    10                                                   output reg MISO,         /* the serial data sent to the master */
    11                                                   output reg [9:0]rx_data, /* the data which is read from the memory */
    12                                                   output reg rx_valid      /* the signal dedicates that rx_data coverted to parallel by slave and ready for memory */ 
    13                                               );  
    14                                                 /*------FSM States Declaration------*/ 
    15                                                   parameter IDLE       = 3'b000;
    16                                                   parameter CHK_CMD    = 3'b001;
    17                                                   parameter WRITE      = 3'b010;
    18                                                   parameter READ_ADD   = 3'b011;
    19                                                   parameter READ_DATA  = 3'b100;
    20                                                   
    21                                                 /* Xilinx Vivado's Attribute FSM Encoding Method (Gray, One_Hot, Sequential) */
    22                                                   (* fsm_encoding = "sequential" *)    /* after analysis, Sequential has the best slag time after implementation */
    23                                                 /*--------internal signals----------*/ 
    24                                                   reg [2:0]CS,NS;         /* Current and Next States */
    25                                                   reg [3:0]rx_counter;    /* to access the rx_data bus (8-bit) during converting from serial to parallel */  
    26                                                   reg [3:0]tx_counter;    /* to access the tx_data bus (8-bit) during converting from serial to parallel */  
    27                                                   reg rd_addr_hold;       /* Hold read address */
    28                                                 /*------------State memory----------*/ 
    29              1                      24002       always @(posedge clk ) begin
    30                                                   if(~arst_n)begin
    31              1                          2             CS <= IDLE;
    32                                                   end else
    33              1                      24000             CS <= NS;
    34                                                 end
    35                                                 /*----------Next State Logic--------*/
    36              1                      66655       always @(*) begin
    37                                                   case (CS)
    38                                                       IDLE :begin
    39                                                           if(SS_n)
    40              1                       6000                     NS = IDLE;
    41                                                           else
    42              1                       6000                     NS = CHK_CMD;
    43                                                       end 
    44                                                       CHK_CMD : begin
    45                                                           /* the master opens the communication to the slave */
    46                                                           if(~SS_n) begin
    47                                                               /* if MOSI is low, operation will be write */ 
    48                                                               if(~MOSI)
    49              1                       6000                         NS = WRITE;
    50                                                               /* if MOSI is high, operation will be read */ 
    51                                                               else begin
    52                                                                   /* if the read addr is held, the next is read the data */
    53                                                                   if(rd_addr_hold)
    54              1                       1482                             NS = READ_DATA;
    55                                                                   /* if the read addr isn't held, the next is read address */
    56                                                                   else
    57              1                       1482                             NS = READ_ADD;
    58                                                               end 
    59                                                           end
    60                                                           /* the master ends the communication to the slave */
    61                                                           else  
    62              1                    ***0***                     NS = IDLE;
    63                                                       end
    64                                                       WRITE : begin
    65                                                           /* the master opens the communication to the slave */
    66                                                           if(~SS_n) begin
    67              1                      16856                     NS = WRITE;
    68                                                           end
    69                                                           /* the master ends the communication to the slave */
    70                                                           else  
    71              1                       3036                     NS = IDLE;
    72                                                       end
    73                                                       READ_ADD : begin
    74                                                           /* the master opens the communication to the slave */
    75                                                           if(~SS_n) begin
    76              1                       8836                     NS = READ_ADD;
    77                                                           end
    78                                                           /* the master ends the communication to the slave */
    79                                                           else  
    80              1                       1482                     NS = IDLE;
    81                                                       end
    82                                                       READ_DATA : begin
    83                                                           /* the master opens the communication to the slave */
    84                                                           if(~SS_n) 
    85              1                      13998                     NS = READ_DATA;
    86                                                           /* the master ends the communication to the slave */
    87                                                           else  
    88              1                       1482                     NS = IDLE;
    89                                                       end
    90              1                          1             default:  NS = IDLE;
    91                                                   endcase
    92                                                 end
    93                                                 /*----------Output logic----------*/ 
    94              1                      91340       always @(posedge clk ) begin
    95                                                   if(~arst_n)begin
    96              1                          2             MISO             <= 0;
    97              1                          2             rx_data          <= 0;
    98              1                          2             rx_valid         <= 0;
    99              1                          2             rd_addr_hold     <= 0;
    100             1                          2             rx_counter       <= 0;
    101             1                          2             tx_counter       <= 0;
    102                                                  end
    103                                                  case (CS)
    104                                                      IDLE :begin
    105             1                       6001                 rx_data  <= 0;
    106             1                       6001                 rx_valid <= 0;
    107             1                       6001                 rx_counter  <= 0;
    108             1                       6001                 tx_counter  <= 0;
    109                                                          if(tx_valid)
    110             1                       1481                     MISO <= tx_data[0]; // Fixed
    111                                                          else
    112             1                       4520                     MISO <= 0;
    113                                                      end 
    114                                                      CHK_CMD:begin
    115             1                       6000                 MISO     <= 0;
    116             1                       6000                 rx_data  <= 0;
    117             1                       6000                 rx_valid <= 0;
    118             1                       6000                 rx_counter  <= 0;
    119             1                       6000                 tx_counter  <= 0;
    120                                                      end
    121                                                      WRITE:begin
    122                                                          if(rx_counter<10)begin
    123             1                      30360                     rx_data[9-rx_counter] <= MOSI;
    124             1                      30360                     rx_counter <= rx_counter + 1;
    125             1                      30360                     rx_valid <= 0;
    126                                                          end else begin
    127             1                       3036                     rx_valid <= 1;
    128             1                       3036                     rx_counter <= 0;
    129                                                          end
    130                                                      end
    131                                                      READ_ADD:begin
    132                                                          if(rx_counter<10)begin
    133             1                      14820                     rx_data[9-rx_counter] <= MOSI;
    134             1                      14820                     rx_counter <= rx_counter + 1;
    135                                                          end else begin
    136             1                       1482                     rx_valid <= 1;
    137             1                       1482                     rd_addr_hold <=1;
    138             1                       1482                     rx_counter <= 0;
    139                                                          end
    140                                                      end
    141                                                      READ_DATA:begin
    142                                                          if(rx_counter<10)begin
    143             1                      14820                     rx_data[9-rx_counter] <= MOSI;
    144             1                      14820                     rx_counter <= rx_counter + 1;
    145                                                          end else begin
    146             1                      14820                     rx_valid <= 1;
    147                                                              /* Convert the read data from parallel to serial */ 
    148                                                              if(tx_valid)begin
    149                                                                  if(tx_counter<8)begin
    150             1                      11856                             MISO <= tx_data[7-tx_counter]; // Fixed
    151             1                      11856                             tx_counter <= tx_counter + 1;
    152                                                                      if (tx_counter == 7)
    153             1                       1482                                 rd_addr_hold <= 0;
    154                                                                  end else begin
    155             1                    ***0***                             MISO <= 0;
    156             1                    ***0***                             rx_counter   <= 0;
    157             1                    ***0***                             tx_counter   <= 0;
    158             1                    ***0***                             rd_addr_hold <= 0;
    159             1                    ***0***                             rx_valid <= 0;
    160                                                                  end
    161                                                              end
    162                                                          end
    163                                                      end
    164                                                      default:begin
    165             1                          1               MISO <= 0;
    166             1                          1               rx_data <= 0;
    167             1                          1               rx_valid <= 0;
    168             1                          1               tx_counter <=0;
    169             1                          1               rx_counter <=0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         80        80         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#slave  --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                           CS[2-0]           1           1                              100.00 
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                           NS[2-0]           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                            arst_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                      rd_addr_hold           1           1                              100.00 
                                   rx_counter[3-0]           1           1                              100.00 
                                      rx_data[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                   tx_counter[3-0]           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         40 
Toggled Node Count   =         40 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (80 of 80 bins)

=================================================================================
=== Instance: /\tb_top#RAM /RAM_sva_inst
=== Design Unit: work.SPI_ram_sva
=================================================================================

Assertion Coverage:
    Assertions                       6         6         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/\tb_top#RAM /RAM_sva_inst/assert_check_reset
                     design/SPI_Assertions/SPI_ram_sva.sv(31)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_wr_addr_ram
                     design/SPI_Assertions/SPI_ram_sva.sv(42)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_wr_data_ram
                     design/SPI_Assertions/SPI_ram_sva.sv(53)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_rd_addr_ram
                     design/SPI_Assertions/SPI_ram_sva.sv(64)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_rd_data_ram
                     design/SPI_Assertions/SPI_ram_sva.sv(73)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_tx_valid
                     design/SPI_Assertions/SPI_ram_sva.sv(84)
                                                        0          1
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /\tb_top#RAM /RAM_sva_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/SPI_Assertions/SPI_ram_sva.sv
    12                                               module SPI_ram_sva(
    13                                                   input clk,rst_n,rx_valid,
    14                                                   input[MEM_WIDTH+1:0]din,
    15                                                   input logic [MEM_WIDTH-1:0]dout,
    16                                                   input logic tx_valid,
    17                                                   input logic [ADDR_SIZE-1:0] addr_internal,
    18                                                   input logic [MEM_WIDTH-1:0] current_addr_data
    19                                                   );
    20                                                   logic [1:0] control_bits;
    21                                                   parameter MEM_DEPTH=256;
    22                                                   parameter ADDR_SIZE=8;
    23                                                   parameter MEM_WIDTH=8;
    24              1                      10447         assign control_bits = din[9:8];

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         80        80         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#RAM /RAM_sva_inst --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                addr_internal[0-7]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                 control_bits[1-0]           1           1                              100.00 
                            current_addr_data[0-7]           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[0-7]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         40 
Toggled Node Count   =         40 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (80 of 80 bins)

=================================================================================
=== Instance: /\tb_top#RAM 
=== Design Unit: work.RAM_Sync_Single_port
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         7         1    87.50%

================================Branch Details================================

Branch Coverage for instance /\tb_top#RAM 

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/SPI_design/Designer RTL/SPI_ram.v
------------------------------------IF Branch------------------------------------
    28                                     56747     Count coming in to IF
    28              1                          2         if(~arst_n)begin
    31              1                      19336         end else if(rx_valid) begin
    54              1                      37409         end else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    33                                     19336     Count coming in to CASE
    34              1                       1518               2'b00 :
    37              1                       1518               2'b01 : 
    40              1                       1482               2'b10 : 
    43              1                      14818               2'b11 : begin
    48              1                    ***0***               default: begin
Branch totals: 4 hits of 5 branches = 80.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      12        10         2    83.33%

================================Statement Details================================

Statement Coverage for instance /\tb_top#RAM  --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/SPI_design/Designer RTL/SPI_ram.v
    1                                                module RAM_Sync_Single_port #(
    2                                                  /*------------Parameters------------*/
    3                                                    parameter MEM_DEPTH = 256,         /*  Memory depth */
    4                                                    parameter ADD_SIZE = 8            /* Address size based upon the memory depth */
    5                                                )(
    6                                                  /*--------------Inputs--------------*/
    7                                                  input  [9:0]din,    /* Data input, din[9] detemines write or read, 0 => Write, 1 => read
    8                                                                       * din[9:8] = 00 => Write, Hold din[7:0] internally as write address
    9                                                                       * din[9:8] = 01 => Write, write din[7:0] in the memory with wr address held previously
    10                                                                      * din[9:8] = 10 => Read, Hold din[7:0] internally as Read address
    11                                                                      * din[9:8] = 01 => Read the memory with rd address held previously,tx_valid = HIGH,
    12                                                                      *                  dout holds the word read from the memory, ignore din[7:0]     */
    13                                                 input  clk,         /*  clock signal input */
    14                                                 input  arst_n,      /*  active low asynchronous reset */
    15                                                 input  rx_valid,    /*  if HIGH: accept din[7:0] to save the wr/rd address internally or write a memory word */
    16                                                 /*--------------outputs-------------*/
    17                                                 output reg [7:0]dout,            /* data out of Ram */
    18                                                 output reg tx_valid              /*  Whenever the command is memory read, the tx_valid should be HIGH */
    19                                               );
    20                                                 /* internal bus to hold the address internally */
    21                                                 reg [ADD_SIZE-1:0]addr_internal;
    22                                               
    23                                                 /* memory declaration */
    24                                                 (* ram_style = "block" *)reg [7:0]mem[MEM_DEPTH-1:0];
    25                                               
    26                                               
    27              1                      56747       always @(posedge clk) begin
    28                                                   if(~arst_n)begin
    29              1                          2           dout <= 0;
    30              1                          2           tx_valid <= 0;
    31                                                   end else if(rx_valid) begin
    32              1                      19336           tx_valid<=0; // Fixed
    33                                                     case (din[9:8])
    34                                                         2'b00 :
    35                                                           /* Write operation - hold the write address */ 
    36              1                       1518                 addr_internal <= din[7:0];
    37                                                         2'b01 : 
    38                                                           /* Write operation - write data to memory in the internal address held previously  */ 
    39              1                       1518                 mem[addr_internal] <= din[7:0];
    40                                                         2'b10 : 
    41                                                           /* Read operation - hold the read address */ 
    42              1                       1482                 addr_internal <= din[7:0];
    43                                                         2'b11 : begin
    44                                                           /* Read operation - read data from memory mem[addr_internal]  */ 
    45              1                      14818                 dout <= mem[addr_internal];
    46              1                      14818                 tx_valid <= 1;
    47                                                         end
    48                                                         default: begin
    49                                                           /* deafult case  */ 
    50              1                    ***0***                 dout <= 0;
    51              1                    ***0***                 tx_valid <= 0;
    52                                                         end
    53                                                     endcase
    54                                                   end else begin
    55                                                     /* reset tx_valid when the rx_valid is low */
    56              1                      37409           tx_valid <= 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         60        60         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#RAM  --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                addr_internal[7-0]           1           1                              100.00 
                                            arst_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[7-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         30 
Toggled Node Count   =         30 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (60 of 60 bins)


ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/\tb_top#slave /SPI_slave_inst/assert_reset
                     design/SPI_Assertions/SPI_slave_sva.sv(32)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_idle_to_chk_cmd
                     design/SPI_Assertions/SPI_slave_sva.sv(45)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_idle_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(54)
                                                        0          0
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(63)
                                                        0          0
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd_to_write
                     design/SPI_Assertions/SPI_slave_sva.sv(72)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd_to_read_data
                     design/SPI_Assertions/SPI_slave_sva.sv(81)
                                                        0          0
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd_to_read_add
                     design/SPI_Assertions/SPI_slave_sva.sv(90)
                                                        0          0
/\tb_top#slave /SPI_slave_inst/assert_read_add_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(99)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_read_add_to_read_add
                     design/SPI_Assertions/SPI_slave_sva.sv(108)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_read_data_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(117)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_read_data_to_read_data
                     design/SPI_Assertions/SPI_slave_sva.sv(126)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_write_to_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(135)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_write_to_write
                     design/SPI_Assertions/SPI_slave_sva.sv(144)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_idle
                     design/SPI_Assertions/SPI_slave_sva.sv(159)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_chk_cmd
                     design/SPI_Assertions/SPI_slave_sva.sv(171)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_serial_to_parallel
                     design/SPI_Assertions/SPI_slave_sva.sv(199)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_rx_valid
                     design/SPI_Assertions/SPI_slave_sva.sv(211)
                                                        0          1
/\tb_top#slave /SPI_slave_inst/assert_miso
                     design/SPI_Assertions/SPI_slave_sva.sv(230)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_check_reset
                     design/SPI_Assertions/SPI_ram_sva.sv(31)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_wr_addr_ram
                     design/SPI_Assertions/SPI_ram_sva.sv(42)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_wr_data_ram
                     design/SPI_Assertions/SPI_ram_sva.sv(53)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_rd_addr_ram
                     design/SPI_Assertions/SPI_ram_sva.sv(64)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_rd_data_ram
                     design/SPI_Assertions/SPI_ram_sva.sv(73)
                                                        0          1
/\tb_top#RAM /RAM_sva_inst/assert_tx_valid
                     design/SPI_Assertions/SPI_ram_sva.sv(84)
                                                        0          1

Total Coverage By Instance (filtered view): 90.08%

